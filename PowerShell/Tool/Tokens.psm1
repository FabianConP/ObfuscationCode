class Tokens {
    static $Kind = @{
        Ampersand = "&"
        And = "-and"
        AndAnd = "&&"
        As = "-as"
        Assembly = "assembly"
        AtCurly = "@{"
        AtParen = "@("
        Band = "-band"
        Base = "base"
        Begin = "begin"
        Bnot = "-bnot"
        Bor = "-bor"
        Break = "break"
        Bxor = "-xor"
        Catch = "catch"
        Ccontains = "-ccontains"
        Ceq = "-ceq"
        Cge = "-cge"
        Cgt = "-cgt"
        Cin = "-cin"
        Class = "class"
        Cle = "-cle"
        Clike = "-clike"
        Clt = "-clt"
        Cmatch = "-cmatch"
        Cne = "-cne"
        Cnotcontains = "-cnotcontains"
        Cnotin = "-notin"
        Cnotlike = "-cnotlike"
        Cnotmatch = "-cnotmatch"
        Colon = ":"
        ColonColon = "::"
        Comma = ","
        Command = "command"
        Continue = "continue"
        Creplace = "-creplace"
        Csplit = "-csplit"
        Data = "data"
        Define = "define"
        Divide = "/"
        DivideEquals = "/="
        Do = "do"
        #DollarParen = "$("
        Dot = "."
        DotDot = ".."
        Dynamicparam = "dynamicparam"
        Else = "else"
        ElseIf = "elseif"
        End = "end"
        Enum = "enum"
        Equals = "="
        Exclaim = "!"
        Exit = "exit"
        Filter = "filter"
        Finally = "finally"
        For = "for"
        Foreach = "foreach"
        Format = "-f"
        From = "from"
        Function = "function"
        Hidden = "hidden"
        Icontains = "-icontains"
        Ieq = "-ieq"
        If = "if"
        Ige = "-ige"
        Igt = "-igt"
        Iin = "-iin"
        Ile = "-ile"
        Ilike = "-ilike"
        Ilt = "-ilt"
        Imatch = "-imatch"
        In = "in"
        Ine = "-ine"
        InlineScript = "InlineScript"
        Inotcontains = "-inotcontains"
        Inotin = "-inotin"
        Inotlike = "-inotlike"
        Inotmatch = "-inotmatch"
        Interface = "interface"
        Ireplace = "-ireplace"
        Is = "-is"
        IsNot = "-isnot"
        Isplit = "-isplit"
        Join = "-join"
        Label = ":"
        LBracket = "["
        LCurly = "{"
        LParen = "("
        Minus = "-"
        MinusEquals = "-="
        MinusMinus = "--"
        Module = "module"
        Multiply = "*"
        MultiplyEquals = "*="
        Namespace = "namespace"
        NewLine = "\n"
        Not = "-not"
        Or = "-or"
        OrOr = "||"
        Parallel = "parallel"
        Param = "param"
        Parameter = "-"
        Pipe = "|"
        Plus = "+"
        PlusEquals = "+="
        PlusPlus = "++"
        PostfixMinusMinus = "--"
        PostfixPlusPlus = "++"
        Private = "private"
        Process = "process"
        Public = "public"
        RBracket = "]"
        RCurly = "}"
        RedirectInStd = "<"
        Redirection = ">>"
        Rem = "%"
        RemainderEquals = "%="
        Return = "return"
        RParen = ")"
        Semi = ";"
        Sequence = "sequence"
        SplattedVariable = "@"
        Static = "static"
        Switch = "switch"
        Throw = "throw"
        Trap = "trap"
        Try = "try"
        Type = "type"
        Until = "until"
        Using = "using"
        Var = "var"
        Variable = "$"
        While = "while"
        Workflow = "workflow"
        Xor = "-xor"
    }
}